stages:
  - build
  - test
  - release
  - deploy

services:
  - docker:dind

variables:
  # GitLab
  DOCKER_DRIVER: overlay2
  BOT_CONTAINER_TEST_IMAGE: registry.gitlab.com/nepeat1/homura-discord/bot:$CI_COMMIT_REF_NAME
  BOT_CONTAINER_RELEASE_IMAGE: registry.gitlab.com/nepeat1/homura-discord/bot:latest
  WEB_CONTAINER_TEST_IMAGE: registry.gitlab.com/nepeat1/homura-discord/backend:$CI_COMMIT_REF_NAME
  WEB_CONTAINER_RELEASE_IMAGE: registry.gitlab.com/nepeat1/homura-discord/backend:latest
  # Configure postgres service (https://hub.docker.com/_/postgres/)
  POSTGRES_DB: cidatabase
  POSTGRES_USER: ciuser
  POSTGRES_PASSWORD: citest
  POSTGRES_URL: "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres/$POSTGRES_DB"
  # App Redis
  REDIS_HOST: redis
  REDIS_PORT: 6379

build:
  image: docker:latest
  stage: build
  script:
    - docker build --pull --force-rm -t $BOT_CONTAINER_TEST_IMAGE bot/
    - docker build --pull --force-rm -t $WEB_CONTAINER_TEST_IMAGE backend/
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker push $BOT_CONTAINER_TEST_IMAGE
    - docker push $WEB_CONTAINER_TEST_IMAGE

testbot:
  image: $BOT_CONTAINER_TEST_IMAGE
  stage: test
  services:
    - redis
  script:
    - pytest --cov=homura -v bot/tests/

release-image:
  image: docker:latest
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $BOT_CONTAINER_TEST_IMAGE
    - docker tag $BOT_CONTAINER_TEST_IMAGE $BOT_CONTAINER_RELEASE_IMAGE
    - docker push $BOT_CONTAINER_RELEASE_IMAGE
    - docker pull $WEB_CONTAINER_TEST_IMAGE
    - docker tag $WEB_CONTAINER_TEST_IMAGE $WEB_CONTAINER_RELEASE_IMAGE
    - docker push $WEB_CONTAINER_RELEASE_IMAGE
  only:
    - master

deploy:
  image:
    name: docker/compose:1.19.0
    entrypoint: [""]
  stage: deploy
  environment:
    name: production
  script:
    - docker-compose pull
    - docker-compose up -d
  tags:
    - deploy
  only:
    - master
    